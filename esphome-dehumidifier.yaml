substitutions:
  name: bedroom-dehumidifier
  friendly_name: Bedroom Dehumidifier

esphome:
  name: ${name}
  friendly_name: ${friendly_name}

esp32:
  board: esp32-c3-devkitm-1
  framework:
    type: arduino

logger:

web_server:

captive_portal:

mdns:

api:

ota:
  platform: esphome

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  output_power: 17.5dB
  # Enable fallback hotspot in case wifi connection fails
  manual_ip:
    static_ip: 10.100.10.86  # Here you must use the correct IP Adress for your device
    gateway: 10.100.10.1
    subnet: 255.255.255.0
  ap:
    ssid: "DehumiB Fallback Hotspot"
    password: "dehumi1234"

# Tank button
binary_sensor:
  - platform: gpio
    pin:
      number: 3
      mode: INPUT_PULLUP
    name: "Tank Installed"
    device_class: opening
    filters:
      - delayed_on: 10ms
    on_press:
      then:
        - switch.turn_on: releu
    on_release:
      then:
        - switch.turn_off: releu

# Relay
switch:
  - platform: gpio
    name: ${friendly_name} Switch
    id: releu
    pin: 
      number: 0
      inverted: False

# Temperature & Humidity
sensor:
  - platform: dht
    model: DHT22
    pin: 
      number: 1
    temperature:
      name: ${friendly_name} Temperature
    humidity:
      name: ${friendly_name} Humidity
    update_interval: 30s

  # WiFi Signal
  - platform: wifi_signal
    name: ${friendly_name} WiFi Signal
    update_interval: 600s

  # Uptime in days
  - platform: uptime
    name: ${friendly_name} Uptime in Days
    id: uptime_sensor_days
    update_interval: 60s
    on_raw_value:
      then:
        - text_sensor.template.publish:
            id: uptime_human
            state: !lambda |-
              int seconds = round(id(uptime_sensor_days).raw_state);
              int days = seconds / (24 * 3600);
              seconds = seconds % (24 * 3600);
              int hours = seconds / 3600;
              seconds = seconds % 3600;
              int minutes = seconds / 60;
              seconds = seconds % 60;
              return (
                (days ? String(days) + "d " : "") +
                (hours ? String(hours) + "h " : "") +
                (minutes ? String(minutes) + "m " : "") +
                (String(seconds) + "s")
              ).c_str();


time:
  - platform: homeassistant
    id: homeassistant_time

# Text sensors with general information.
text_sensor:
  - platform: version
    name: ${friendly_name} Version
  - platform: wifi_info
    ip_address:
      name: ${friendly_name} IP
    bssid:
      name: ${friendly_name} BSSID

  - platform: template
    name: Uptime Human Readable
    id: uptime_human
    icon: mdi:clock-start



# Output configuration for fan control (PWM control)
output:
  - platform: ledc
    id: pwm_output
    pin: 5  # Your PWM control pin
    frequency: 1000Hz

fan:
  - platform: speed
    output: pwm_output
    name: ${friendly_name} PWM Fan
    id: my_pwm_fan
    speed_count: 100
